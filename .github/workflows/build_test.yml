name: Nix CI, builds Rust, iOS and Android.

on:
  push:
    branches:
      - master
  issue_comment:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  rust_android_checks_and_build:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/run-ci') &&
      (github.author_association == 'MEMBER' || github.author_association == 'OWNER' || github.author_association == 'COLLABORATOR')
    steps:
      - name: Add reaction to comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            })

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.url }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Enable Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Check formatting (bark-cpp)
        run: nix develop .# --command bash -c "cd bark-cpp && cargo fmt -- --check"

      - name: Run tests (bark-cpp)
        run: nix develop .# --command bash -c "cd bark-cpp && cargo test"

      - name: Build bark-cpp for Android
        run: nix develop .# --command bash -c "cd bark-cpp && ./build-android.sh"

      - name: Install example app dependencies (Android Job)
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn install"

      - name: Build example Android app
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn example build:android"

  ios_build:
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/run-ci') &&
      (github.author_association == 'MEMBER' || github.author_association == 'OWNER' || github.author_association == 'COLLABORATOR')
    runs-on: macos-latest
    steps:
      - name: Add reaction to comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            })

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.url }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Enable Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build bark-cpp for iOS
        run: nix develop .# --command bash -c "cd bark-cpp && ./build-ios.sh"

      - name: Install example app dependencies (iOS Job)
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn install"

      - name: Build example iOS app
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn example build:ios"
