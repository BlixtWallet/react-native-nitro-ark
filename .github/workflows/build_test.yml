name: CI on Comment
on:
  issue_comment:
    types: [created]
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

# Rust checks, builds and android builds
jobs:
  rust_android_checks_and_build:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    if: |
      (github.event.issue.pull_request &&
       contains(github.event.comment.body, '/run-ci') &&
       (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR')) ||
      github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Enable Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Check formatting (bark-cpp)
        run: nix develop .# --command bash -c "cd bark-cpp && cargo fmt -- --check"
      
      - name: Run tests (bark-cpp)
        run: nix develop .# --command bash -c "cd bark-cpp && cargo test"
      
      - name: Build bark-cpp for Android
        run: nix develop .# --command bash -c "cd bark-cpp && ./build-android.sh"
      
      - name: Install example app dependencies
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn install"
      
      - name: Build example Android app
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn example build:android"

# iOS Builds
  ios_build:
    runs-on: macos-latest
    if: |
      (github.event.issue.pull_request &&
       contains(github.event.comment.body, '/run-ci') &&
       (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'COLLABORATOR')) ||
      github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Enable Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Build bark-cpp for iOS
        run: nix develop .# --command bash -c "cd bark-cpp && ./build-ios.sh"
      
      - name: Install example app dependencies
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn install"
      
      - name: Build example iOS app
        run: nix develop .# --command bash -c "cd react-native-nitro-ark && yarn example build:ios"