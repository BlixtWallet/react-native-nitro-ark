///
/// HybridNitroArkSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroArkSpec.hpp"

namespace margelo::nitro::nitroark {

  void HybridNitroArkSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("createMnemonic", &HybridNitroArkSpec::createMnemonic);
      prototype.registerHybridMethod("loadWallet", &HybridNitroArkSpec::loadWallet);
      prototype.registerHybridMethod("closeWallet", &HybridNitroArkSpec::closeWallet);
      prototype.registerHybridMethod("isWalletLoaded", &HybridNitroArkSpec::isWalletLoaded);
      prototype.registerHybridMethod("persistConfig", &HybridNitroArkSpec::persistConfig);
      prototype.registerHybridMethod("maintenance", &HybridNitroArkSpec::maintenance);
      prototype.registerHybridMethod("sync", &HybridNitroArkSpec::sync);
      prototype.registerHybridMethod("syncArk", &HybridNitroArkSpec::syncArk);
      prototype.registerHybridMethod("syncRounds", &HybridNitroArkSpec::syncRounds);
      prototype.registerHybridMethod("getArkInfo", &HybridNitroArkSpec::getArkInfo);
      prototype.registerHybridMethod("onchainBalance", &HybridNitroArkSpec::onchainBalance);
      prototype.registerHybridMethod("offchainBalance", &HybridNitroArkSpec::offchainBalance);
      prototype.registerHybridMethod("getOnchainAddress", &HybridNitroArkSpec::getOnchainAddress);
      prototype.registerHybridMethod("getOnchainUtxos", &HybridNitroArkSpec::getOnchainUtxos);
      prototype.registerHybridMethod("getVtxoPubkey", &HybridNitroArkSpec::getVtxoPubkey);
      prototype.registerHybridMethod("getVtxos", &HybridNitroArkSpec::getVtxos);
      prototype.registerHybridMethod("sendOnchain", &HybridNitroArkSpec::sendOnchain);
      prototype.registerHybridMethod("drainOnchain", &HybridNitroArkSpec::drainOnchain);
      prototype.registerHybridMethod("sendManyOnchain", &HybridNitroArkSpec::sendManyOnchain);
      prototype.registerHybridMethod("boardAmount", &HybridNitroArkSpec::boardAmount);
      prototype.registerHybridMethod("boardAll", &HybridNitroArkSpec::boardAll);
      prototype.registerHybridMethod("sendArkoorPayment", &HybridNitroArkSpec::sendArkoorPayment);
      prototype.registerHybridMethod("sendBolt11Payment", &HybridNitroArkSpec::sendBolt11Payment);
      prototype.registerHybridMethod("sendLnaddr", &HybridNitroArkSpec::sendLnaddr);
      prototype.registerHybridMethod("sendRoundOnchain", &HybridNitroArkSpec::sendRoundOnchain);
      prototype.registerHybridMethod("bolt11Invoice", &HybridNitroArkSpec::bolt11Invoice);
      prototype.registerHybridMethod("claimBolt11Payment", &HybridNitroArkSpec::claimBolt11Payment);
      prototype.registerHybridMethod("offboardSpecific", &HybridNitroArkSpec::offboardSpecific);
      prototype.registerHybridMethod("offboardAll", &HybridNitroArkSpec::offboardAll);
      prototype.registerHybridMethod("exitStartSpecific", &HybridNitroArkSpec::exitStartSpecific);
      prototype.registerHybridMethod("startExitForEntireWallet", &HybridNitroArkSpec::startExitForEntireWallet);
      prototype.registerHybridMethod("exitProgressOnce", &HybridNitroArkSpec::exitProgressOnce);
    });
  }

} // namespace margelo::nitro::nitroark
